# Generated by Django 4.2.20 on 2025-04-17 19:40

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AnswerQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_text', models.CharField(max_length=200)),
                ('question_text', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Cardset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('cardset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jeopardy.cardset')),
            ],
        ),
        migrations.CreateModel(
            name='GameRound',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('cardset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jeopardy.cardset')),
                ('category', models.ManyToManyField(related_name='categories', to='jeopardy.category')),
            ],
        ),
        migrations.CreateModel(
            name='Points',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('gameround', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jeopardy.gameround')),
            ],
        ),
        migrations.AddField(
            model_name='cardset',
            name='point_steps',
            field=models.ManyToManyField(related_name='point_steps_cardset', to='jeopardy.points'),
        ),
        migrations.CreateModel(
            name='AnswerQuestionAsked',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_asked', models.DateTimeField(auto_now_add=True)),
                ('time_updated', models.DateTimeField(auto_now=True)),
                ('answer_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jeopardy.answerquestion')),
                ('gameround', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jeopardy.gameround')),
                ('player_correct', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='right_answer', to='jeopardy.player')),
                ('player_wrong', models.ManyToManyField(related_name='wrong_answers', to='jeopardy.player')),
            ],
        ),
        migrations.AddField(
            model_name='answerquestion',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jeopardy.category'),
        ),
        migrations.AddField(
            model_name='answerquestion',
            name='points',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jeopardy.points'),
        ),
    ]
